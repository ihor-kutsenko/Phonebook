{"version":3,"file":"static/js/289.1ddbf2a4.chunk.js","mappings":"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","sources":["components/MainContainer/MainContainer.styled.js","components/MainContainer/MainContainer.jsx","components/Section/Section.styled.js","components/Section/Section.jsx","redux/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Header/Header.styled.js","components/Header/Header.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  padding: 24px;\n  max-width: 100%;\n  min-height: 100vh;\n\n  background-color: var(--background-color);\n`;\n","import PropTypes from 'prop-types';\nimport { Container } from './MainContainer.styled';\n\nconst MainContainer = ({ children }) => {\n  return <Container>{children}</Container>;\n};\n\nMainContainer.propTypes = {\n  children: PropTypes.any.isRequired,\n};\n\nexport default MainContainer;\n","import styled, { keyframes } from 'styled-components';\n\nexport const MainSection = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 375px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  border-radius: 8px;\n\n  box-shadow: -1px -1px 15px #8ba793, 15px 15px 35px #fff;\n`;\n\nconst pulsateColor = keyframes`\n  0% {\n    color: var(--accent-color);\n  }\n\n  50% {\n    color: #fff;\n  }\n\n  100% {\n    color: var(--accent-color);\n  }\n`;\n\nexport const Title = styled.h1`\n  margin-bottom: 12px;\n  text-align: center;\n  color: transparent;\n  animation: ${pulsateColor} 5s infinite;\n  animation-duration: 5s;\n`;\n","import PropTypes from 'prop-types';\nimport { MainSection, Title } from './Section.styled';\n\nconst Section = ({ title, children }) => {\n  return (\n    <MainSection>\n      <Title title={title}>{title}</Title>\n      {children}\n    </MainSection>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.any,\n};\n\nexport default Section;\n","export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter.filter;\n","import styled from 'styled-components';\nimport { Field, Form, ErrorMessage } from 'formik';\n\nexport const FormikForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 12px;\n  margin-bottom: 12px;\n  padding: 5px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  width: 300px;\n\n  color: var(--secondary-color);\n`;\n\nexport const LabelWrapper = styled.div`\n  display: flex;\n  gap: 8px;\n  margin-left: 8px;\n`;\n\nexport const FormikInput = styled(Field)`\n  padding: 6px 8px;\n  border: 0;\n  outline: 0;\n  border-radius: 8px;\n  background-color: var(--secondary-background-color);\n  font-size: 14px;\n`;\n\nexport const FormikErrorMessage = styled(ErrorMessage)`\n  max-width: 375px;\n  padding-left: 10px;\n  padding-right: 10px;\n  font-style: italic;\n  color: var(--error-message-color);\n`;\n\nexport const Button = styled.button`\n  display: inline-flex;\n  justify-content: center;\n  gap: 6px;\n  padding: 8px 14px;\n  margin-top: 10px;\n  max-width: 100%;\n  font-size: 18px;\n\n  border: none;\n  outline: none;\n  border-radius: 8px;\n  background-color: var(--button-background-color);\n  color: #fff;\n  cursor: pointer;\n  transition: background-color 250ms linear, color 250ms linear;\n\n  &:hover,\n  &:focus {\n    background-color: var(--accent-color);\n    color: #000;\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { toast } from 'react-toastify';\nimport notifyOptions from 'NotifyOptions/NotifyOptions';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { BsFillTelephoneFill, BsPersonFill } from 'react-icons/bs';\nimport { IoMdPersonAdd } from 'react-icons/io';\n\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/selectors';\n\nimport {\n  FormikForm,\n  Label,\n  LabelWrapper,\n  FormikInput,\n  FormikErrorMessage,\n  Button,\n} from './ContactForm.styled';\n\nconst schema = yup.object().shape({\n  name: yup\n    .string()\n    .trim()\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      'Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d`Artagnan'\n    )\n    .required(),\n  number: yup\n    .string()\n    .trim()\n    .matches(\n      /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    )\n    .required(),\n});\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const onAddContact = newContact => {\n    const includesContact = contacts.filter(\n      contact =>\n        contact.name.toLowerCase().trim() ===\n          newContact.name.toLowerCase().trim() ||\n        contact.number.trim() === newContact.number.trim()\n    ).length;\n\n    if (includesContact) {\n      return toast.error(\n        `${newContact.name}: is already in contacts`,\n        notifyOptions\n      );\n    } else {\n      dispatch(addContact(newContact));\n    }\n    toast.success(\n      `${newContact.name} was successfully added to your contacts`,\n      notifyOptions\n    );\n  };\n\n  const initialValues = {\n    name: '',\n    number: '',\n  };\n\n  const handleSubmit = (values, { resetForm }) => {\n    onAddContact({ ...values });\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      validationSchema={schema}\n    >\n      <FormikForm autoComplete=\"off\">\n        <Label htmlFor=\"name\">\n          <LabelWrapper>\n            <BsPersonFill />\n            Name\n          </LabelWrapper>\n\n          <FormikInput\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n          <FormikErrorMessage name=\"name\" component=\"span\" />\n        </Label>\n        <Label htmlFor=\"number\">\n          <LabelWrapper>\n            <BsFillTelephoneFill />\n            Number\n          </LabelWrapper>\n          <FormikInput\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n          <FormikErrorMessage name=\"number\" component=\"span\" />\n        </Label>\n\n        <Button type=\"submit\">\n          <IoMdPersonAdd size=\"18\" />\n          Add contact\n        </Button>\n      </FormikForm>\n    </Formik>\n  );\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const HeaderTitle = styled.h2`\n  margin-bottom: 12px;\n  text-align: center;\n  font-size: 28px;\n  color: var(--accent-color);\n`;\n","import PropTypes from 'prop-types';\nimport { HeaderTitle } from './Header.styled';\n\nconst Header = ({ title }) => {\n  return <HeaderTitle>{title}</HeaderTitle>;\n};\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 8px;\n  color: var(--secondary-color);\n`;\n\nexport const LabelWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  margin-left: 8px;\n`;\n\nexport const Input = styled.input`\n  padding: 6px 8px;\n  width: 220px;\n  border: 0;\n  outline: 0;\n  border-radius: 8px;\n\n  background-color: var(--secondary-background-color);\n  font-size: 14px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { BsSearch } from 'react-icons/bs';\n\nimport { selectFilter } from 'redux/selectors';\nimport { filterContact } from 'redux/filter/filterSlice';\n\nimport { Label, LabelWrapper, Input } from './Filter.styled';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const searchFilter = e => {\n    dispatch(filterContact(e.currentTarget.value.toLowerCase()));\n  };\n\n  return (\n    <Label>\n      <LabelWrapper>\n        <BsSearch size=\"14\" /> Find contacts by name\n      </LabelWrapper>\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={searchFilter}\n        placeholder=\"search\"\n      />\n    </Label>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const TotalContacts = styled.p`\n  margin-bottom: 10px;\n  color: white;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  padding: 8px 12px;\n  max-width: 375px;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-wrap: wrap;\n  max-width: 375px;\n\n  gap: 8px;\n`;\n\nexport const Name = styled.span`\n  color: var(--secondary-color);\n`;\n\nexport const Number = styled.span`\n  color: #fff;\n`;\n\nexport const Button = styled.button`\n  padding: 5px 7px;\n  border: none;\n  outline: none;\n  border-radius: 50%;\n  background-color: var(--button-background-color);\n  color: #000;\n  cursor: pointer;\n  transition: background-color 250ms linear, color 250ms linear;\n\n  &:hover,\n  &:focus {\n    background-color: var(--accent-color);\n    color: #fff;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { toast } from 'react-toastify';\nimport notifyOptions from 'NotifyOptions/NotifyOptions';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { RiDeleteBinLine } from 'react-icons/ri';\n\nimport { selectFilter, selectContacts } from 'redux/selectors';\nimport { deleteContact } from 'redux/contacts/operations';\n\nimport { Button, List, ListItem, Name, Number } from './ContactList.styled';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const onDeleteContact = id => {\n    dispatch(deleteContact(id));\n\n    const deletedContact = contacts.find(contact => contact.id === id);\n    if (deletedContact) {\n      toast.warn(\n        `${deletedContact.name} was successfully deleted from your contacts`,\n        notifyOptions\n      );\n    }\n  };\n\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter)\n  );\n  // variant useMemo\n  // const filteredContacts = usememo(()=> {\n  // return contacts.filter(contact =>\n  //   contact.name.toLowerCase().includes(filter)\n  // )\n  // }, [contacts, filter]);\n\n  return (\n    <List>\n      {filteredContacts.map(({ name, number, id }) => {\n        return (\n          <ListItem key={id}>\n            <Name>{name}:</Name>\n            <Number>{number}</Number>\n            <Button type=\"button\" onClick={() => onDeleteContact(id)}>\n              <RiDeleteBinLine size=\"16\" />\n            </Button>\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n};\n\nexport default ContactList;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n// components\nimport MainContainer from 'components/MainContainer/MainContainer';\nimport Section from 'components/Section/Section';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Header from 'components/Header/Header';\nimport Filter from 'components/Filter/Filter';\nimport Loader from 'components/Loader/Loader';\nimport ContactList from 'components/ContactList/ContactList';\n\nimport { TotalContacts } from 'components/ContactList/ContactList.styled';\n// selectors\nimport { selectError, selectIsLoading, selectContacts } from 'redux/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nconst Contacts = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <MainContainer>\n      <Section title=\"Phonebook\">\n        <ContactForm />\n        <Header title=\"Contacts\" />\n        <TotalContacts>Total contacts: {contacts.length}</TotalContacts>\n        <Filter />\n        {isLoading && !error && <Loader />}\n        <ContactList />\n      </Section>\n      <ToastContainer />\n    </MainContainer>\n  );\n};\n\nexport default Contacts;\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","_ref","children","_jsx","MainSection","pulsateColor","keyframes","_templateObject2","Title","_templateObject3","title","_jsxs","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","FormikForm","Form","Label","LabelWrapper","FormikInput","Field","_templateObject4","FormikErrorMessage","ErrorMessage","_templateObject5","Button","_templateObject6","schema","yup","shape","name","trim","matches","required","number","dispatch","useDispatch","useSelector","Formik","initialValues","onSubmit","values","resetForm","newContact","contact","toLowerCase","length","toast","concat","notifyOptions","addContact","onAddContact","_objectSpread","validationSchema","autoComplete","htmlFor","BsPersonFill","type","pattern","component","BsFillTelephoneFill","IoMdPersonAdd","size","HeaderTitle","Input","BsSearch","value","onChange","e","filterContact","currentTarget","placeholder","TotalContacts","List","ListItem","Name","Number","filteredContacts","includes","map","id","onClick","deleteContact","deletedContact","find","onDeleteContact","RiDeleteBinLine","useEffect","fetchContacts","MainContainer","Section","ContactForm","Header","Filter","Loader","ContactList","ToastContainer"],"sourceRoot":""}