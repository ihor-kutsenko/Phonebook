{"version":3,"file":"static/js/38.db55659e.chunk.js","mappings":"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","sources":["components/MainContainer/MainContainer.styled.js","components/MainContainer/MainContainer.jsx","components/Section/Section.styled.js","components/Section/Section.jsx","utils/shema.js","redux/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Header/Header.styled.js","components/Header/Header.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ChangeContactModal/ChangeContactModal.styled.js","components/ChangeContactModal/customsStyles.js","components/ChangeContactModal/ChangeContactModal.jsx","components/Modal/Modal.styled.js","components/Modal/modalStyles.js","components/Modal/Modal.jsx","utils/abbrevname.js","utils/getRandomHexColor.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  padding: 24px;\n  max-width: 100%;\n  min-height: 100vh;\n\n  background-color: var(--background-color);\n`;\n","import PropTypes from 'prop-types';\nimport { Container } from './MainContainer.styled';\n\nconst MainContainer = ({ children }) => {\n  return <Container>{children}</Container>;\n};\n\nMainContainer.propTypes = {\n  children: PropTypes.any.isRequired,\n};\n\nexport default MainContainer;\n","import styled, { keyframes } from 'styled-components';\n\nexport const MainSection = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 375px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  border-radius: 8px;\n\n  box-shadow: -1px -1px 15px #8ba793, 15px 15px 35px #fff;\n`;\n\nconst pulsateColor = keyframes`\n  0% {\n    color: var(--accent-color);\n  }\n\n  50% {\n    color: #fff;\n  }\n\n  100% {\n    color: var(--accent-color);\n  }\n`;\n\nexport const Title = styled.h1`\n  margin-bottom: 12px;\n  text-align: center;\n  color: transparent;\n  animation: ${pulsateColor} 5s infinite;\n  animation-duration: 5s;\n`;\n","import PropTypes from 'prop-types';\nimport { MainSection, Title } from './Section.styled';\n\nconst Section = ({ title, children }) => {\n  return (\n    <MainSection>\n      <Title title={title}>{title}</Title>\n      {children}\n    </MainSection>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.any,\n};\n\nexport default Section;\n","import * as yup from 'yup';\nconst schema = yup.object().shape({\n  name: yup\n    .string()\n    .trim()\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      'Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d`Artagnan'\n    )\n    .required(),\n  number: yup\n    .string()\n    .trim()\n    .matches(\n      /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    )\n    .required(),\n});\n\nexport default schema;\n","export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter.filter;\n","import styled from 'styled-components';\nimport { Field, Form, ErrorMessage } from 'formik';\n\nexport const FormikForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 12px;\n  margin-bottom: 12px;\n  padding: 5px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  width: 300px;\n\n  color: var(--secondary-color);\n`;\n\nexport const LabelWrapper = styled.div`\n  display: flex;\n  gap: 8px;\n  margin-left: 8px;\n`;\n\nexport const FormikInput = styled(Field)`\n  padding: 6px 8px;\n  border: 0;\n  outline: 0;\n  border-radius: 8px;\n  background-color: var(--secondary-background-color);\n  font-size: 14px;\n`;\n\nexport const FormikErrorMessage = styled(ErrorMessage)`\n  max-width: 375px;\n  padding-left: 10px;\n  padding-right: 10px;\n  font-style: italic;\n  color: var(--error-message-color);\n`;\n\nexport const Button = styled.button`\n  display: inline-flex;\n  justify-content: center;\n  gap: 6px;\n  padding: 8px 14px;\n  margin-top: 10px;\n  max-width: 100%;\n  font-size: 18px;\n\n  border: none;\n  outline: none;\n  border-radius: 8px;\n  background-color: var(--button-background-color);\n  color: #fff;\n  cursor: pointer;\n  transition: background-color 250ms linear, color 250ms linear;\n\n  &:hover,\n  &:focus {\n    background-color: var(--accent-color);\n    color: #000;\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { Formik } from 'formik';\nimport { toast } from 'react-toastify';\nimport notifyOptions from 'NotifyOptions/NotifyOptions';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { BsFillTelephoneFill, BsPersonFill } from 'react-icons/bs';\nimport { IoMdPersonAdd } from 'react-icons/io';\n\nimport schema from 'utils/shema';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/selectors';\n\nimport {\n  FormikForm,\n  Label,\n  LabelWrapper,\n  FormikInput,\n  FormikErrorMessage,\n  Button,\n} from './ContactForm.styled';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const onAddContact = newContact => {\n    const includesContact = contacts.filter(\n      contact =>\n        contact.name.toLowerCase().trim() ===\n          newContact.name.toLowerCase().trim() ||\n        contact.number.trim() === newContact.number.trim()\n    ).length;\n\n    if (includesContact) {\n      return toast.error(\n        `${newContact.name}: is already in contacts`,\n        notifyOptions\n      );\n    } else {\n      dispatch(addContact(newContact));\n    }\n    toast.success(\n      `${newContact.name} was successfully added to your contacts`,\n      notifyOptions\n    );\n  };\n\n  const initialValues = {\n    name: '',\n    number: '',\n  };\n\n  const handleSubmit = (values, { resetForm }) => {\n    onAddContact({ ...values });\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      validationSchema={schema}\n    >\n      <FormikForm autoComplete=\"off\">\n        <Label htmlFor=\"name\">\n          <LabelWrapper>\n            <BsPersonFill />\n            Name\n          </LabelWrapper>\n\n          <FormikInput\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n          <FormikErrorMessage name=\"name\" component=\"span\" />\n        </Label>\n        <Label htmlFor=\"number\">\n          <LabelWrapper>\n            <BsFillTelephoneFill />\n            Number\n          </LabelWrapper>\n          <FormikInput\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            placeholder=\"+38-099-111-22-33\"\n          />\n          <FormikErrorMessage name=\"number\" component=\"span\" />\n        </Label>\n\n        <Button type=\"submit\">\n          <IoMdPersonAdd size=\"18\" />\n          Add contact\n        </Button>\n      </FormikForm>\n    </Formik>\n  );\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const HeaderTitle = styled.h2`\n  margin-bottom: 12px;\n  text-align: center;\n  font-size: 28px;\n  color: var(--accent-color);\n`;\n","import PropTypes from 'prop-types';\nimport { HeaderTitle } from './Header.styled';\n\nconst Header = ({ title }) => {\n  return <HeaderTitle>{title}</HeaderTitle>;\n};\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 8px;\n  color: var(--secondary-color);\n`;\n\nexport const LabelWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  margin-left: 8px;\n`;\n\nexport const Input = styled.input`\n  padding: 6px 8px;\n  width: 220px;\n  border: 0;\n  outline: 0;\n  border-radius: 8px;\n\n  background-color: var(--secondary-background-color);\n  font-size: 14px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { BsSearch } from 'react-icons/bs';\n\nimport { selectFilter } from 'redux/selectors';\nimport { filterContact } from 'redux/filter/filterSlice';\n\nimport { Label, LabelWrapper, Input } from './Filter.styled';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const searchFilter = e => {\n    dispatch(filterContact(e.currentTarget.value.toLowerCase()));\n  };\n\n  return (\n    <Label>\n      <LabelWrapper>\n        <BsSearch size=\"14\" /> Find contacts by name\n      </LabelWrapper>\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={searchFilter}\n        placeholder=\"search\"\n      />\n    </Label>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\nimport { Form as FormikForm, Field, ErrorMessage as FormikError } from 'formik';\n\nexport const Form = styled(FormikForm)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  gap: 12px;\n  margin-bottom: 12px;\n  padding: 5px;\n`;\n\nexport const FormField = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n\n  width: 300px;\n  height: auto;\n  color: var(--secondary-color);\n`;\n\nexport const LabelWrapper = styled.div`\n  display: flex;\n  gap: 8px;\n  margin-left: 8px;\n`;\n\nexport const FieldFormik = styled(Field)`\n  padding: 6px 8px;\n  border: 0;\n  outline: 0;\n  border-radius: 8px;\n  background-color: var(--secondary-background-color);\n  font-size: 14px;\n`;\n\nexport const ErrorMessage = styled(FormikError)`\n  max-width: 375px;\n  padding-left: 10px;\n  padding-right: 10px;\n  font-style: italic;\n  color: var(--error-message-color);\n`;\n\nexport const StyledButton = styled.button`\n  display: inline-flex;\n  justify-content: center;\n  gap: 6px;\n  padding: 8px 14px;\n  margin-top: 10px;\n  max-width: 100%;\n  font-size: 18px;\n\n  border: none;\n  outline: none;\n  border-radius: 8px;\n  background-color: var(--button-background-color);\n  color: #fff;\n  cursor: pointer;\n  transition: background-color 250ms linear, color 250ms linear;\n\n  &:hover,\n  &:focus {\n    background-color: var(--accent-color);\n    color: #000;\n  }\n`;\n\nexport const CloseBtn = styled.button`\n  position: absolute;\n  top: 5px;\n  right: 5px;\n  padding: 5px;\n\n  width: 30px;\n  height: 30px;\n  border: none;\n  outline: none;\n  border-radius: 50%;\n  color: var(--secondary-color);\n  background-color: transparent;\n\n  transition: all 0.2s ease-in-out;\n\n  &:hover,\n  &:focus {\n    background-color: var(--secondary-background-color);\n\n    svg {\n      fill: var(--accent-color);\n      stroke: var(--accent-color);\n    }\n  }\n`;\n","export const customStyles = {\n  overlay: {\n    backgroundColor: 'rgb(50, 98, 68)',\n    zIndex: 1301,\n  },\n  content: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    zIndex: '1201',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n\n    maxWidth: '375px',\n    paddingTop: '24px',\n    paddingBottom: '24px',\n    borderRadius: '8px',\n    backgroundColor: 'rgb(50, 98, 68)',\n    boxShadow: '-1px -1px 15px #8ba793, 15px 15px 35px #fff',\n  },\n};\n","import { useState } from 'react';\nimport { Formik } from 'formik';\nimport Modal from 'react-modal';\nimport { useDispatch } from 'react-redux';\nimport schema from 'utils/shema';\n\nimport { BsFillTelephoneFill, BsPersonFill } from 'react-icons/bs';\nimport { MdOutlineClose } from 'react-icons/md';\n\nimport { changeContact } from 'redux/contacts/operations';\n\nimport {\n  Form,\n  FormField,\n  FieldFormik,\n  ErrorMessage,\n  StyledButton,\n  LabelWrapper,\n  CloseBtn,\n} from './ChangeContactModal.styled';\nimport { customStyles } from './customsStyles';\n\nModal.setAppElement('#root');\n\nexport const ChangeContactModal = ({\n  isOpen,\n  data,\n  onClose,\n  setModalIsOpen,\n}) => {\n  const [formValues, setFormValues] = useState(data || {});\n\n  const initialValues = { name: '', number: '' };\n  const savedValues = {\n    name: data?.name || '',\n    number: data?.number || '',\n  };\n\n  const dispatch = useDispatch();\n\n  const closeModal = () => {\n    onClose();\n    setModalIsOpen(false);\n  };\n\n  const onSubmitHandler = (values, { resetForm }) => {\n    const newFormValues = { ...formValues, ...values };\n    setFormValues(newFormValues);\n    dispatch(changeContact(newFormValues));\n    resetForm();\n    closeModal();\n  };\n\n  return (\n    <>\n      <Modal\n        isOpen={isOpen}\n        onRequestClose={closeModal}\n        contentLabel=\"Inline Styles Modal Example\"\n        style={customStyles}\n      >\n        <CloseBtn onClick={onClose}>\n          <MdOutlineClose size={20} />\n        </CloseBtn>\n        <Formik\n          initialValues={savedValues || initialValues}\n          onSubmit={onSubmitHandler}\n          enableReinitialize\n          validationSchema={schema}\n        >\n          {formik => {\n            return (\n              <Form autoComplete=\"off\">\n                <FormField>\n                  <LabelWrapper>\n                    <BsPersonFill />\n                    Name\n                  </LabelWrapper>\n                  <FieldFormik type=\"text\" name=\"name\" placeholder=\"Name\" />\n                  <ErrorMessage name=\"name\" component=\"span\" />\n                </FormField>\n                <FormField>\n                  <LabelWrapper>\n                    <BsFillTelephoneFill />\n                    Phone Number\n                  </LabelWrapper>\n                  <FieldFormik\n                    type=\"tel\"\n                    name=\"number\"\n                    placeholder=\"+38-099-111-22-33\"\n                  />\n                  <ErrorMessage name=\"number\" component=\"span\" />\n                </FormField>\n                <StyledButton\n                  type=\"submit\"\n                  disabled={!formik.isValid || formik.isSubmitting}\n                >\n                  Save contact\n                </StyledButton>\n              </Form>\n            );\n          }}\n        </Formik>\n      </Modal>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const CloseBtn = styled.button`\n  position: absolute;\n  top: 5px;\n  right: 5px;\n  padding: 5px;\n\n  width: 30px;\n  height: 30px;\n  border: none;\n  outline: none;\n  border-radius: 50%;\n  color: var(--secondary-color);\n  background-color: transparent;\n\n  transition: all 0.2s ease-in-out;\n\n  &:hover,\n  &:focus {\n    background-color: var(--secondary-background-color);\n\n    svg {\n      fill: var(--accent-color);\n      stroke: var(--accent-color);\n    }\n  }\n`;\n\nexport const ModalPicture = styled.img`\n  width: 100%;\n  height: 100%;\n  margin-bottom: 0;\n  object-fit: cover;\n  object-position: center;\n`;\n\nexport const ContactInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 16px;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 4px;\n  padding-right: 4px;\n  width: 100%;\n  height: auto;\n`;\nexport const InfoWrapper = styled.div`\n  display: flex;\n  gap: 8px;\n  margin-left: 8px;\n  width: 100%;\n  height: auto;\n  color: var(--secondary-color);\n`;\n\nexport const Info = styled.p`\n  height: auto;\n  color: white;\n`;\n\nexport const EditButton = styled.button`\n  display: flex;\n  justify-content: center;\n\n  gap: 6px;\n  padding: 8px 14px;\n  margin-top: 40px;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 100%;\n  font-size: 18px;\n\n  border: none;\n  outline: none;\n  border-radius: 8px;\n  background-color: var(--button-background-color);\n  color: #fff;\n  cursor: pointer;\n  transition: background-color 250ms linear, color 250ms linear;\n\n  &:hover,\n  &:focus {\n    background-color: var(--accent-color);\n    color: #000;\n  }\n`;\n\nexport const PhotoWrap = styled.div`\n  margin: 0 auto;\n  padding: 10px;\n  max-width: 100%;\n  width: 320px;\n  height: 220px;\n  border-radius: 50%;\n`;\n\nexport const BorderOutside = styled.div`\n  padding: 7px;\n  margin: 0 auto;\n  width: 170px;\n  border-radius: 50%;\n  border: none;\n  margin-bottom: 10px;\n  box-shadow: inset 2px 2px 5px #babecc, inset -5px -5px 10px #fff;\n\n  &:hover,\n  &:focus {\n    box-shadow: inset 1px 1px 2px #babecc, inset -1px -1px 2px #fff;\n  }\n\n  @media screen and(min-width:768px) {\n    margin-bottom: 15px;\n  }\n`;\nexport const BorderInside = styled.div`\n  padding: 7px;\n  border: none;\n  border-radius: 50%;\n  box-shadow: inset 2px 2px 5px #babecc, inset -5px -5px 10px #fff;\n\n  &:hover,\n  &:focus {\n    box-shadow: inset 1px 1px 2px #babecc, inset -1px -1px 2px #fff;\n  }\n`;\nexport const PhotoThumb = styled.div`\n  margin-bottom: 0;\n  width: 150px;\n  height: 150px;\n  border-radius: 50%;\n  overflow: hidden;\n`;\n","export const customStyles = {\n  overlay: {\n    backgroundColor: 'rgb(50, 98, 68)',\n    zIndex: 1300,\n  },\n  content: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    zIndex: '1200',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    height: '460px',\n    border: 'none',\n    maxWidth: '375px',\n    paddingTop: '24px',\n    paddingBottom: '24px',\n    borderRadius: '8px',\n    backgroundColor: 'rgb(50, 98, 68)',\n    boxShadow: '-1px -1px 15px #8ba793, 15px 15px 35px #fff',\n  },\n};\n","import Modal from 'react-modal';\nimport { useState } from 'react';\n\nimport { BsFillTelephoneFill, BsPersonFill } from 'react-icons/bs';\nimport { MdOutlineClose } from 'react-icons/md';\nimport { TfiPencil } from 'react-icons/tfi';\n\nimport { ChangeContactModal } from 'components/ChangeContactModal/ChangeContactModal';\n\nimport Av from 'img/avatar.png';\n\nimport {\n  BorderInside,\n  BorderOutside,\n  EditButton,\n  CloseBtn,\n  ModalPicture,\n  PhotoThumb,\n  PhotoWrap,\n  ContactInfo,\n  InfoWrapper,\n  Info,\n} from './Modal.styled';\nimport { customStyles } from './modalStyles';\n\nModal.setAppElement('#root');\n\nexport const ContactModal = ({ isOpen, data, onClose }) => {\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n\n  const openChangeModal = () => {\n    setModalIsOpen(true);\n  };\n\n  const closeChangeModal = () => {\n    setModalIsOpen(false);\n    onClose();\n  };\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onRequestClose={onClose}\n      contentLabel=\"Inline Styles Modal Example\"\n      style={customStyles}\n    >\n      <CloseBtn onClick={onClose}>\n        <MdOutlineClose size={20} />\n      </CloseBtn>\n      <PhotoWrap>\n        <BorderOutside>\n          <BorderInside>\n            <PhotoThumb>\n              <ModalPicture src={Av} alt=\"photo\" width=\"260\" />\n            </PhotoThumb>\n          </BorderInside>\n        </BorderOutside>\n      </PhotoWrap>\n      <ContactInfo>\n        <InfoWrapper>\n          <BsPersonFill />\n          Name: <Info> {data?.name}</Info>\n        </InfoWrapper>\n\n        <InfoWrapper>\n          <BsFillTelephoneFill />\n          Phone Number: <Info> {data?.number}</Info>\n        </InfoWrapper>\n      </ContactInfo>\n\n      <EditButton onClick={openChangeModal}>\n        <TfiPencil size=\"16\" />\n        Edit contact\n      </EditButton>\n\n      <ChangeContactModal\n        isOpen={modalIsOpen}\n        onClose={closeChangeModal}\n        data={data}\n        setModalIsOpen={setModalIsOpen}\n      />\n    </Modal>\n  );\n};\n","export function abbrevName(name) {\n  const arrName = name.toUpperCase().trim().split('');\n  const dott = arrName.indexOf(' ');\n  const abbrArr = arrName[0] + arrName.slice(dott, dott + 2);\n  const result = abbrArr.replace(' ,', '');\n  return result;\n}\n","export const getRandomHexColor = () =>\n  `#${Math.floor(Math.random() * 16777215)\n    .toString(16)\n    .padStart(6, 0)}`;\n","import styled from 'styled-components';\n\nexport const TotalContacts = styled.p`\n  margin-bottom: 10px;\n  color: white;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  padding: 8px 12px;\n  max-width: 375px;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-wrap: wrap;\n  max-width: 375px;\n\n  gap: 8px;\n`;\n\nexport const Name = styled.span`\n  color: var(--secondary-color);\n`;\n\nexport const Number = styled.span`\n  color: #fff;\n`;\n\nexport const Button = styled.button`\n  padding: 5px 7px;\n  border: none;\n  outline: none;\n  border-radius: 50%;\n  background-color: var(--button-background-color);\n  color: #000;\n  cursor: pointer;\n  transition: background-color 250ms linear, color 250ms linear;\n\n  &:hover,\n  &:focus {\n    background-color: var(--accent-color);\n    color: #fff;\n  }\n`;\n\nexport const ModalPictureWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  height: 60px;\n  width: 60px;\n\n  border-radius: 50%;\n  box-shadow: rgba(255, 255, 255, 0.1) -1px -1px 1px,\n    rgba(0, 0, 0, 0.5) 1px 1px 1px;\n  cursor: pointer;\n  overflow: hidden;\n\n  &:hover {\n    background: #ecf0f3;\n    box-shadow: inset -3px -3px 7px #ffffff, inset 3px 3px 5px #ceced1;\n  }\n\n  @media screen and (min-width: 480px) {\n    height: 40px;\n    width: 40px;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useState } from 'react';\n\nimport { toast } from 'react-toastify';\nimport notifyOptions from 'NotifyOptions/NotifyOptions';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { RiDeleteBinLine } from 'react-icons/ri';\nimport { Tooltip } from '@chakra-ui/react';\nimport Avatar from '@mui/material/Avatar';\n\nimport { ContactModal } from 'components/Modal/Modal';\nimport { selectFilter, selectContacts } from 'redux/selectors';\nimport { deleteContact } from 'redux/contacts/operations';\n\nimport { abbrevName } from 'utils/abbrevname';\nimport { getRandomHexColor } from 'utils/getRandomHexColor';\n\nimport {\n  Button,\n  List,\n  ListItem,\n  Name,\n  Number,\n  ModalPictureWrapper,\n} from './ContactList.styled';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const [selectedContact, setSelectedContact] = useState(null);\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const onDeleteContact = id => {\n    dispatch(deleteContact(id));\n\n    const deletedContact = contacts.find(contact => contact.id === id);\n    if (deletedContact) {\n      toast.warn(\n        `${deletedContact.name} was successfully deleted from your contacts`,\n        notifyOptions\n      );\n    }\n  };\n\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter)\n  );\n  // variant useMemo\n  // const filteredContacts = usememo(()=> {\n  // return contacts.filter(contact =>\n  //   contact.name.toLowerCase().includes(filter)\n  // )\n  // }, [contacts, filter]);\n\n  const closeModal = () => {\n    setSelectedContact(null);\n  };\n  const setModalData = id => {\n    const selectContact = contacts.find(contact => contact.id === id);\n    setSelectedContact(selectContact);\n  };\n\n  function stringAvatar(name) {\n    return {\n      sx: {\n        bgcolor: getRandomHexColor(),\n      },\n      children: abbrevName(name),\n    };\n  }\n\n  return (\n    <List>\n      {filteredContacts.map(({ name, number, id }) => {\n        return (\n          <>\n            <ListItem key={id}>\n              <Tooltip label=\"Click\" color=\"#000\" fontSize=\"xs\">\n                <ModalPictureWrapper>\n                  <Avatar\n                    onClick={() => setModalData(id)}\n                    {...stringAvatar(Object.values(name).join(''))}\n                  />\n                </ModalPictureWrapper>\n              </Tooltip>\n              <Name>{name}:</Name>\n              <Number>{number}</Number>\n              <Button type=\"button\" onClick={() => onDeleteContact(id)}>\n                <RiDeleteBinLine size=\"16\" />\n              </Button>\n            </ListItem>\n            <ContactModal\n              isOpen={selectedContact !== null}\n              onClose={closeModal}\n              data={selectedContact}\n            />\n          </>\n        );\n      })}\n    </List>\n  );\n};\n\nexport default ContactList;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n// components\nimport MainContainer from 'components/MainContainer/MainContainer';\nimport Section from 'components/Section/Section';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Header from 'components/Header/Header';\nimport Filter from 'components/Filter/Filter';\nimport Loader from 'components/Loader/Loader';\nimport ContactList from 'components/ContactList/ContactList';\n\nimport { TotalContacts } from 'components/ContactList/ContactList.styled';\n// selectors\nimport { selectError, selectIsLoading, selectContacts } from 'redux/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nconst Contacts = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <MainContainer>\n      <Section title=\"Phonebook\">\n        <ContactForm />\n        <Header title=\"Contacts\" />\n        <TotalContacts>Total contacts: {contacts.length}</TotalContacts>\n        <Filter />\n        {isLoading && !error && <Loader />}\n        <ContactList />\n      </Section>\n      <ToastContainer />\n    </MainContainer>\n  );\n};\n\nexport default Contacts;\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","_ref","children","_jsx","MainSection","pulsateColor","keyframes","_templateObject2","Title","_templateObject3","title","_jsxs","yup","shape","name","trim","matches","required","number","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","FormikForm","Form","Label","LabelWrapper","FormikInput","Field","_templateObject4","FormikErrorMessage","ErrorMessage","_templateObject5","Button","_templateObject6","dispatch","useDispatch","useSelector","Formik","initialValues","onSubmit","values","resetForm","newContact","contact","toLowerCase","length","toast","concat","notifyOptions","addContact","onAddContact","_objectSpread","validationSchema","schema","autoComplete","htmlFor","BsPersonFill","type","pattern","component","BsFillTelephoneFill","placeholder","IoMdPersonAdd","size","HeaderTitle","Input","BsSearch","value","onChange","e","filterContact","currentTarget","FormField","FieldFormik","FormikError","StyledButton","CloseBtn","_templateObject7","customStyles","overlay","backgroundColor","zIndex","content","position","top","left","right","bottom","marginRight","transform","display","flexDirection","alignItems","justifyContent","maxWidth","paddingTop","paddingBottom","borderRadius","boxShadow","Modal","ChangeContactModal","isOpen","data","onClose","setModalIsOpen","_useState","useState","_useState2","_slicedToArray","formValues","setFormValues","savedValues","closeModal","_Fragment","onRequestClose","contentLabel","style","onClick","MdOutlineClose","_ref2","newFormValues","changeContact","enableReinitialize","formik","disabled","isValid","isSubmitting","ModalPicture","ContactInfo","InfoWrapper","Info","EditButton","PhotoWrap","BorderOutside","_templateObject8","BorderInside","_templateObject9","PhotoThumb","_templateObject10","height","border","ContactModal","modalIsOpen","src","Av","alt","width","TfiPencil","abbrevName","arrName","toUpperCase","split","dott","indexOf","slice","replace","TotalContacts","List","ListItem","Name","Number","ModalPictureWrapper","selectedContact","setSelectedContact","filteredContacts","includes","stringAvatar","sx","bgcolor","Math","floor","random","toString","padStart","map","id","Tooltip","label","color","fontSize","Avatar","selectContact","find","setModalData","Object","join","deleteContact","deletedContact","onDeleteContact","RiDeleteBinLine","useEffect","fetchContacts","MainContainer","Section","ContactForm","Header","Filter","Loader","ContactList","ToastContainer"],"sourceRoot":""}